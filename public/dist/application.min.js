"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("local"),ApplicationConfiguration.registerModule("platinum"),ApplicationConfiguration.registerModule("player"),ApplicationConfiguration.registerModule("users"),ApplicationConfiguration.registerModule("wraps"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$rootScope","$stateParams","$location","Authentication","Articles",function($scope,$rootScope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content,type:this.type});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(confirm("Remove it?"))if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})},$scope.playIt=function(article){$rootScope.$broadcast("playit",{content:article.content,type:article.type})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Home","home","item","/home?")}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("root",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("home",{url:"/home",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("local").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Local","local","item","/local?")}]),angular.module("local").config(["$stateProvider",function($stateProvider){$stateProvider.state("local",{url:"/local",templateUrl:"modules/local/views/local.client.view.html"})}]),angular.module("local").controller("LocalController",["$scope",function($scope){}]),angular.module("player").run(["Menus",function(Menus){}]),angular.module("player").config(["$stateProvider",function($stateProvider){$stateProvider.state("player",{url:"/player",templateUrl:"modules/player/views/player.client.view.html"})}]),angular.module("player").controller("PlayerController",["$scope","$timeout","$sce","Authentication","Menus",function($scope,$timeout,$sce,Authentication,Menus){var ME="me",VLC="vlc",VJS="vjs";$scope.mediaTitle="",$scope.mediaUrl="mms://208.43.60.70/hope-fm2",$scope.mediaType="audio/wma",$scope.mediaTime="",$scope.playerType=ME,$scope.playerStatus="",$scope.isPaused=!1,$scope.mePlayer=null,$scope.meReady=!0,$scope.vjsPlayer=null,$scope.vjsReady=!0,$scope.vlcPlayer=null,$scope.updateStatus=function(msg){document.getElementById("player-status").innerHTML=msg},$scope.clearPause=function(){$scope.isPaused=!1},$scope.isVlcReady=function(){return $scope.playerType===VLC},$scope.isVjsReady=function(){return $scope.vjsReady&&$scope.playerType===VJS},$scope.isMeReady=function(){return $scope.meReady&&$scope.playerType===ME},$scope.vlcPlay=function(){$scope.updateStatus("==>vlc loading "+$scope.mediaUrl),console.debug("vlcPlay()");var playlist=$scope.vlcPlayer.playlist;$scope.isPaused||(console.debug("vlcPlay():0"),playlist.stop(),playlist.clear(),playlist.add($scope.mediaUrl)),playlist.play(),$scope.isPaused=!1,$scope.updateStatus("==>vlc playing")},$scope.vlcPause=function(){$scope.updateStatus("==>vlc pausing"),console.debug("vlcPause()");var playlist=$scope.vlcPlayer.playlist;playlist.pause(),$scope.isPaused=!0,$scope.updateStatus("==>vlc paused")},$scope.vlcStop=function(){$scope.updateStatus("==>vlc stopping"),console.debug("vlcStop()");var playlist=$scope.vlcPlayer.playlist;playlist.stop(),playlist.clear(),$scope.isPaused=!1,$scope.updateStatus("==>vlc stopped")},$scope.mePlay=function(){$scope.updateStatus("==>me loading "+$scope.mediaUrl),console.debug("mePlay()"),$scope.mePlayer&&$scope.isPaused?(console.debug("mePlay():0"),$scope.mePlayer.play()):(console.debug("mePlay():1"),$scope.meReady=!1,$timeout(function(){$scope.meReady=!0,$timeout(function(){$scope.initMePlayerAndPlay()},500)},500)),$scope.isPaused=!1},$scope.mePause=function(){$scope.updateStatus("==>me pausing"),console.debug("mePause()"),$scope.mePlayer&&(console.debug("mePause():0"),$scope.mePlayer.pause(),$scope.isPaused=!0),$scope.updateStatus("==>me paused")},$scope.meStop=function(){$scope.updateStatus("==>me stopping"),console.debug("meStop()"),$scope.isPaused=!1,$scope.meReady=!1,$scope.mePlayer&&(console.debug("meStop():0"),$scope.mePlayer.pause(),$scope.mePlayer.stop(),$scope.mePlayer=null),$scope.updateStatus("==>me stopped")},$scope.vjsPlay=function(){$scope.updateStatus("==>vjs loading "+$scope.mediaUrl),console.debug("vjsPlay()"),$scope.vjsPlayer&&$scope.isPaused?(console.debug("vjsPlay():0"),$scope.vjsPlayer.play()):(console.debug("vjsPlay():1"),$scope.vjsReady=!1,$timeout(function(){$scope.vjsReady=!0,$timeout(function(){$scope.initVjsPlayerAndPlay()},500)},500)),$scope.isPaused=!1},$scope.vjsPause=function(){$scope.updateStatus("==>vjs pausing"),console.debug("vjsPause()"),$scope.vjsPlayer&&(console.debug("vjsPause():0"),$scope.vjsPlayer.pause(),$scope.isPaused=!0),$scope.updateStatus("==>vjs paused")},$scope.vjsStop=function(){$scope.updateStatus("==>vjs stopping"),console.debug("vjsStop()"),$scope.isPaused=!1,$scope.vjsReady=!1,$scope.vjsPlayer&&(console.debug("vjsStop():0"),$scope.vjsPlayer.pause(),$scope.vjsPlayer=null),$scope.updateStatus("==>vjs stopped")},$scope.startPlay=function(){if($scope.updateStatus("loading "+$scope.mediaUrl),console.debug($scope.mediaUrl),console.debug($scope.mediaType),$scope.playerType===ME)$scope.mePlay();else if($scope.playerType===VJS)$scope.vjsPlay();else{var vlcPlayer=document.getElementById("vlc-player");vlcPlayer&&($scope.vlcPlayer=vlcPlayer,$scope.vlcPlay())}},$scope.pausePlay=function(){if($scope.updateStatus("pausing..."),$scope.playerType===ME)$scope.mePause();else if($scope.playerType===VJS)$scope.vjsPause();else{var vlcPlayer=document.getElementById("vlc-player");vlcPlayer&&$scope.vlcPause()}},$scope.stopPlay=function(){if($scope.updateStatus("stopping..."),$scope.playerType===ME)$scope.meStop();else if($scope.playerType===VJS)$scope.vjsStop();else{var vlcPlayer=document.getElementById("vlc-player");vlcPlayer&&$scope.vlcStop()}},$scope.initMePlayerAndPlay=function(){console.debug("initMePlayerAndPlay"),$("#me-player").mediaelementplayer({plugins:["silverlight","flash","youtube","vimeo"],success:function(mediaElement,domObject,player){console.debug("initMePlayerAndPlay-success"),console.debug(mediaElement.pluginType),$scope.mePlayer=mediaElement,mediaElement.addEventListener("timeupdate",function(e){console.debug("initMePlayerAndPlay-timeupdate"),$scope.updateStatus("===>"+mediaElement.pluginType+": "+mediaElement.currentTime)},!1),console.debug("initMePlayerAndPlay-success-end")},error:function(){console.debug("initMePlayerAndPlay-error"),$scope.updateStatus("error")}})},$scope.initVjsPlayerAndPlay=function(){console.debug("initVjsPlayerAndPlay"),$scope.vjsPlayer=videojs("vjs-player")},$scope.$on("playit",function(event,args){$scope.mediaUrl=args.content,$scope.mediaType=args.type,$scope.startPlay()})}]),angular.module("player").directive("mediaelementPlayer",["$sce",function($sce){return{link:function(scope,element,attributes){scope.mediaType=attributes.mediaType,scope.mediaUrl=attributes.mediaUrl,scope.trustSrc=function(src){return $sce.trustAsResourceUrl(src)}},restrict:"A",scope:{},templateUrl:"modules/player/views/mediaelement-player.client.view.html"}}]),angular.module("player").directive("vjsPlayer",["$sce",function($sce){return{link:function(scope,element,attributes){scope.mediaType=attributes.mediaType,scope.mediaUrl=attributes.mediaUrl,scope.trustSrc=function(src){return $sce.trustAsResourceUrl(src)}},restrict:"A",scope:{},templateUrl:"modules/player/views/vjs-player.client.view.html"}}]),angular.module("player").directive("vlcPlayer",[function(){return{restrict:"A",scope:{report:"="},templateUrl:"modules/player/views/vlc-player.client.view.html"}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),angular.module("wraps").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Wraps","wraps","dropdown","/wraps(/create)?"),Menus.addSubMenuItem("topbar","wraps","List Wraps","wraps"),Menus.addSubMenuItem("topbar","wraps","New Wrap","wraps/create")}]),angular.module("wraps").config(["$stateProvider",function($stateProvider){$stateProvider.state("listWraps",{url:"/wraps",templateUrl:"modules/wraps/views/list-wraps.client.view.html"}).state("createWrap",{url:"/wraps/create",templateUrl:"modules/wraps/views/create-wrap.client.view.html"}).state("viewWrap",{url:"/wraps/:wrapId",templateUrl:"modules/wraps/views/view-wrap.client.view.html"}).state("editWrap",{url:"/wraps/:wrapId/edit",templateUrl:"modules/wraps/views/edit-wrap.client.view.html"})}]),angular.module("wraps").controller("WrapsController",["$scope","$rootScope","$stateParams","$location","Authentication","Wraps",function($scope,$rootScope,$stateParams,$location,Authentication,Wraps){$scope.authentication=Authentication,$scope.create=function(){var wrap=new Wraps({name:this.name,content:this.content,contentType:this.contentType});wrap.$save(function(response){$location.path("wraps/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(wrap){if(wrap){wrap.$remove();for(var i in $scope.wraps)$scope.wraps[i]===wrap&&$scope.wraps.splice(i,1)}else $scope.wrap.$remove(function(){$location.path("wraps")})},$scope.update=function(){var wrap=$scope.wrap;wrap.$update(function(){$location.path("wraps/"+wrap._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.wraps=Wraps.query()},$scope.findOne=function(){$scope.wrap=Wraps.get({wrapId:$stateParams.wrapId})},$scope.playIt=function(wrap){$rootScope.$broadcast("playit",{content:"/wrap-mmsh/"+wrap._id,type:"application/x-mpegURL"})}}]),angular.module("wraps").factory("Wraps",["$resource",function($resource){return $resource("wraps/:wrapId",{wrapId:"@_id"},{update:{method:"PUT"}})}]);